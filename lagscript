local parts = getgenv().PartAmount
local finished = 0
local cparts = {}

--[[
my plan:
1. add part counters
2. no need to reload script to use again, but instead add a restart button
3. show FPS for those that dont know how to check their fps
4. send notification by how much the FPS has dropped
5. customise the value (once a button is pressed it will re-execute the script with the given value)
6. if script will be re-executed, destroy all current lag parts and the script

]]

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextButton = Instance.new("TextButton")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.0245936699, 0, 0.651947141, 0)
Frame.Size = UDim2.new(0, 256, 0, 133)

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.107498527, 0, 0.310847908, 0)
TextButton.Size = UDim2.new(0, 200, 0, 50)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "stop lag"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true
local uistroke1 = Instance.new("UIStroke", Frame)
uistroke1.Thickness = 3
uistroke1.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
local uistroke2 = Instance.new("UIStroke", TextButton)
uistroke2.Thickness = 3
uistroke2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
Frame.Active = true
Frame.Draggable = true
TextButton.MouseButton1Down:Connect(function()
	for _, part in ipairs(cparts) do
		table.clear(cparts)
	end
	for _, lagger in ipairs(game.Workspace:GetChildren()) do
		if lagger.Name == "LAGGER" then
			lagger:Destroy()
		end
	end
	game:GetService("StarterGui"):SetCore("SendNotification", {Title = "LAGGER v1", Text = "Deleted all parts! Re-execute to use again", Duration = 5})
	wait(5)
	TextButton.Parent.Parent:Destroy()
end)

game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "LAGGER v1",
	Text = "executed, give the lagger some time to create parts",
	Duration = 5
})
repeat
	if finished == 0 then
		local model = Instance.new("Model", workspace)
		model.Name = "LAGGER"

		for i = 1, 250 do
			local part = Instance.new("Part")
			part.Anchored = true
			part.Transparency = 0
			part.CanCollide = false
			part.Parent = model
			table.insert(cparts, part)
			wait()
		end
		finished += 1
	else
		local modeltoclone = workspace:FindFirstChild("LAGGER")
		if modeltoclone then
			local clone = modeltoclone:Clone()
			clone.Parent = workspace
			for _, obj in ipairs(clone:GetChildren()) do
				table.insert(cparts, obj)
			end
			finished += 1
		end
	end
	wait()
until finished == parts
game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "LAGGER v1",
	Text = "GET READY TO LAG!!!",
	Duration = 5
})
wait(3)
for _, laggr in ipairs(workspace:GetChildren()) do
	if laggr.Name == "LAGGER" then
		for _, part in ipairs(laggr:GetChildren()) do
			game:GetService("RunService").Heartbeat:Connect(function()
				local cframe = game.Workspace.CurrentCamera.CFrame
				local offset = game.Workspace.CurrentCamera.CFrame.LookVector * -3
				for _, part in ipairs(cparts) do
					part.CFrame = CFrame.new(cframe + offset)
				end
			end)
		end
	end
end
